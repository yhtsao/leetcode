package first;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class MinimizeMalwareSpreadIITest {
    @Test
    public void test01() {
        MinimizeMalwareSpreadII sol = new MinimizeMalwareSpreadII();
        int[][] graph = new int[][]{
                {1, 1, 0}, {1, 1, 0}, {0, 0, 1}
        };
        int[] initial = new int[]{0, 1};
        int ans = 0;
        Assertions.assertEquals(ans, sol.minMalwareSpread(graph, initial));
    }

    @Test
    public void test02() {
        MinimizeMalwareSpreadII sol = new MinimizeMalwareSpreadII();
        int[][] graph = new int[][]{
                {1, 1, 0}, {1, 1, 1}, {0, 1, 1}
        };
        int[] initial = new int[]{0, 1};
        int ans = 1;
        Assertions.assertEquals(ans, sol.minMalwareSpread(graph, initial));
    }

    @Test
    public void test03() {
        MinimizeMalwareSpreadII sol = new MinimizeMalwareSpreadII();
        int[][] graph = new int[][]{
                {1, 1, 0, 0},
                {1, 1, 1, 0},
                {0, 1, 1, 1},
                {0, 0, 1, 1}
        };
        int[] initial = new int[]{0, 1};
        int ans = 1;
        Assertions.assertEquals(ans, sol.minMalwareSpread(graph, initial));
    }

    @Test
    public void test04() {
        MinimizeMalwareSpreadII sol = new MinimizeMalwareSpreadII();
        int[][] graph = new int[][]{
                {1, 1, 0, 1, 0, 0},
                {1, 1, 1, 0, 0, 0},
                {0, 1, 1, 1, 0, 0},
                {1, 0, 1, 1, 1, 0},
                {0, 0, 0, 1, 1, 1},
                {0, 0, 0, 0, 1, 1}
        };
        int[] initial = new int[]{0, 3};
        int ans = 3;
        Assertions.assertEquals(ans, sol.minMalwareSpread(graph, initial));
    }

    @Test
    public void test05() {
        MinimizeMalwareSpreadII sol = new MinimizeMalwareSpreadII();
        int[][] graph = new int[][]{
                {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 1, 0, 0, 1}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}
        };
        int[] initial = new int[]{2, 1, 9};
        int ans = 9;
        Assertions.assertEquals(ans, sol.minMalwareSpread(graph, initial));
    }
}
